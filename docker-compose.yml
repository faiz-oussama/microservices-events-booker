version: '3.9'

services:

  jenkins:
    build:
      context: .
      dockerfile: Dockerfile.jenkins
    privileged: true
    user: root
    ports:
      - "9090:8080"
      - "50000:50000"
    container_name: jenkins
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - jenkins_home:/var/jenkins_home
    environment:
      - DOCKER_HOST=tcp://docker:2376
    networks:
      - ticketing-network
    depends_on:
      - docker

  docker:
    image: docker:dind
    privileged: true
    environment:
      - DOCKER_TLS_CERTDIR=/certs
    volumes:
      - docker_certs:/certs/client
      - jenkins_home:/var/jenkins_home
    networks:
      - ticketing-network

  discovery-service:
    build:
      context: ./discovery-service
      dockerfile: Dockerfile
    container_name: discovery-service
    restart: always
    ports:
      - "8761:8761"
    networks:
      - ticketing-network

  #Databases
  auth-db:
    image: postgres:15
    container_name: auth-postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: authdb
    volumes:
      - auth_pgdata:/var/lib/postgresql/data
    networks:
      - ticketing-network

  ticket-db:
    image: postgres:15
    container_name: ticket-postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: ticketdb
    volumes:
      - ticket_pgdata:/var/lib/postgresql/data
    networks:
      - ticketing-network

  event-db:
    image: postgres:15
    container_name: event-postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: eventdb
    volumes:
      - event_pgdata:/var/lib/postgresql/data
    networks:
      - ticketing-network

  booking-db:
    image: postgres:15
    container_name: booking-postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: bookingdb
    volumes:
      - booking_pgdata:/var/lib/postgresql/data
    networks:
      - ticketing-network

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    restart: always
    depends_on:
      - discovery-service
    ports:
      - "8080:8080"
    networks:
      - ticketing-network

  # Services
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    restart: always
    depends_on:
      - auth-db
      - discovery-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-db:5432/authdb
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin123
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://discovery-service:8761/eureka/
    ports:
      - "8081:8080"
    networks:
      - ticketing-network

  ticket-service:
    build:
      context: ./ticket-service
      dockerfile: Dockerfile
    container_name: ticket-service
    restart: always
    depends_on:
      - ticket-db
      - discovery-service
      - auth-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://ticket-db:5432/ticketdb
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin123
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://discovery-service:8761/eureka/
    ports:
      - "8082:8080"
    networks:
      - ticketing-network

  event-service:
    build:
      context: ./event-service
      dockerfile: Dockerfile
    container_name: event-service
    restart: always
    depends_on:
      - event-db
      - discovery-service
      - auth-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://event-db:5432/eventdb
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin123
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://discovery-service:8761/eureka/
    ports:
      - "8083:8080"
    networks:
      - ticketing-network

  booking-service:
    build:
      context: ./booking-service
      dockerfile: Dockerfile
    container_name: booking-service
    restart: always
    depends_on:
      - booking-db
      - discovery-service
      - auth-service
      - ticket-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://booking-db:5432/bookingdb
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin123
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://discovery-service:8761/eureka/
    ports:
      - "8084:8080"
    networks:
      - ticketing-network

  adminer:
    image: adminer
    restart: always
    depends_on:
      - auth-db
      - ticket-db
      - event-db
      - booking-db
    ports:
      - "8085:8080"
    networks:
      - ticketing-network

networks:
  ticketing-network:
    driver: bridge

volumes:
  auth_pgdata:
  ticket_pgdata:
  event_pgdata:
  booking_pgdata:
  jenkins_home:
  docker_certs: